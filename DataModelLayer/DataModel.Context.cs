//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataModelLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class gymEntities2 : DbContext
    {
        public gymEntities2()
            : base("name=gymEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<Inv> Inv { get; set; }
        public virtual DbSet<LockTable> LockTable { get; set; }
        public virtual DbSet<Members> Members { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<InvView> InvView { get; set; }
        public virtual DbSet<VW_Customers> VW_Customers { get; set; }
        public virtual DbSet<VW_Member> VW_Member { get; set; }
        public virtual DbSet<VW_Users> VW_Users { get; set; }
        public virtual DbSet<UsersTimeOut> UsersTimeOut { get; set; }
        public virtual DbSet<VW_TimeOut> VW_TimeOut { get; set; }
        public virtual DbSet<FoodTemplates> FoodTemplates { get; set; }
        public virtual DbSet<ListMove> ListMove { get; set; }
        public virtual DbSet<MorabiTable> MorabiTable { get; set; }
        public virtual DbSet<ProgramList> ProgramList { get; set; }
        public virtual DbSet<vegetablesTable> vegetablesTable { get; set; }
        public virtual DbSet<MorabiTable_View> MorabiTable_View { get; set; }
        public virtual DbSet<VW_Foods> VW_Foods { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Sp_gym(string userName, string userFamily, string userTel, string userUserName, string userPassword, Nullable<byte> userAge, Nullable<byte> userActive, Nullable<byte> userGender, string codeMeli, string userAddress, string userHomePhone, string userDoreSine, string userDoreBazo, string userDoreKamar, string userGhaad, string userSize, Nullable<byte> userTamrin, Nullable<byte> userKarkard, Nullable<byte> userSharie, string userRegTime, string userFactor, string userPostCode, string userRegDate, string userCharge, Nullable<decimal> userReCharge, Nullable<decimal> userLastCharge, string userKomod, byte[] userImage, Nullable<bool> userEstakhr, Nullable<bool> userBime, Nullable<bool> userKhososi, Nullable<bool> userBarnameQazaiy)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userFamilyParameter = userFamily != null ?
                new ObjectParameter("UserFamily", userFamily) :
                new ObjectParameter("UserFamily", typeof(string));
    
            var userTelParameter = userTel != null ?
                new ObjectParameter("UserTel", userTel) :
                new ObjectParameter("UserTel", typeof(string));
    
            var userUserNameParameter = userUserName != null ?
                new ObjectParameter("UserUserName", userUserName) :
                new ObjectParameter("UserUserName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userAgeParameter = userAge.HasValue ?
                new ObjectParameter("UserAge", userAge) :
                new ObjectParameter("UserAge", typeof(byte));
    
            var userActiveParameter = userActive.HasValue ?
                new ObjectParameter("UserActive", userActive) :
                new ObjectParameter("UserActive", typeof(byte));
    
            var userGenderParameter = userGender.HasValue ?
                new ObjectParameter("UserGender", userGender) :
                new ObjectParameter("UserGender", typeof(byte));
    
            var codeMeliParameter = codeMeli != null ?
                new ObjectParameter("CodeMeli", codeMeli) :
                new ObjectParameter("CodeMeli", typeof(string));
    
            var userAddressParameter = userAddress != null ?
                new ObjectParameter("UserAddress", userAddress) :
                new ObjectParameter("UserAddress", typeof(string));
    
            var userHomePhoneParameter = userHomePhone != null ?
                new ObjectParameter("UserHomePhone", userHomePhone) :
                new ObjectParameter("UserHomePhone", typeof(string));
    
            var userDoreSineParameter = userDoreSine != null ?
                new ObjectParameter("UserDoreSine", userDoreSine) :
                new ObjectParameter("UserDoreSine", typeof(string));
    
            var userDoreBazoParameter = userDoreBazo != null ?
                new ObjectParameter("UserDoreBazo", userDoreBazo) :
                new ObjectParameter("UserDoreBazo", typeof(string));
    
            var userDoreKamarParameter = userDoreKamar != null ?
                new ObjectParameter("UserDoreKamar", userDoreKamar) :
                new ObjectParameter("UserDoreKamar", typeof(string));
    
            var userGhaadParameter = userGhaad != null ?
                new ObjectParameter("UserGhaad", userGhaad) :
                new ObjectParameter("UserGhaad", typeof(string));
    
            var userSizeParameter = userSize != null ?
                new ObjectParameter("UserSize", userSize) :
                new ObjectParameter("UserSize", typeof(string));
    
            var userTamrinParameter = userTamrin.HasValue ?
                new ObjectParameter("UserTamrin", userTamrin) :
                new ObjectParameter("UserTamrin", typeof(byte));
    
            var userKarkardParameter = userKarkard.HasValue ?
                new ObjectParameter("UserKarkard", userKarkard) :
                new ObjectParameter("UserKarkard", typeof(byte));
    
            var userSharieParameter = userSharie.HasValue ?
                new ObjectParameter("UserSharie", userSharie) :
                new ObjectParameter("UserSharie", typeof(byte));
    
            var userRegTimeParameter = userRegTime != null ?
                new ObjectParameter("UserRegTime", userRegTime) :
                new ObjectParameter("UserRegTime", typeof(string));
    
            var userFactorParameter = userFactor != null ?
                new ObjectParameter("UserFactor", userFactor) :
                new ObjectParameter("UserFactor", typeof(string));
    
            var userPostCodeParameter = userPostCode != null ?
                new ObjectParameter("UserPostCode", userPostCode) :
                new ObjectParameter("UserPostCode", typeof(string));
    
            var userRegDateParameter = userRegDate != null ?
                new ObjectParameter("UserRegDate", userRegDate) :
                new ObjectParameter("UserRegDate", typeof(string));
    
            var userChargeParameter = userCharge != null ?
                new ObjectParameter("UserCharge", userCharge) :
                new ObjectParameter("UserCharge", typeof(string));
    
            var userReChargeParameter = userReCharge.HasValue ?
                new ObjectParameter("UserReCharge", userReCharge) :
                new ObjectParameter("UserReCharge", typeof(decimal));
    
            var userLastChargeParameter = userLastCharge.HasValue ?
                new ObjectParameter("UserLastCharge", userLastCharge) :
                new ObjectParameter("UserLastCharge", typeof(decimal));
    
            var userKomodParameter = userKomod != null ?
                new ObjectParameter("UserKomod", userKomod) :
                new ObjectParameter("UserKomod", typeof(string));
    
            var userImageParameter = userImage != null ?
                new ObjectParameter("UserImage", userImage) :
                new ObjectParameter("UserImage", typeof(byte[]));
    
            var userEstakhrParameter = userEstakhr.HasValue ?
                new ObjectParameter("UserEstakhr", userEstakhr) :
                new ObjectParameter("UserEstakhr", typeof(bool));
    
            var userBimeParameter = userBime.HasValue ?
                new ObjectParameter("UserBime", userBime) :
                new ObjectParameter("UserBime", typeof(bool));
    
            var userKhososiParameter = userKhososi.HasValue ?
                new ObjectParameter("UserKhososi", userKhososi) :
                new ObjectParameter("UserKhososi", typeof(bool));
    
            var userBarnameQazaiyParameter = userBarnameQazaiy.HasValue ?
                new ObjectParameter("UserBarnameQazaiy", userBarnameQazaiy) :
                new ObjectParameter("UserBarnameQazaiy", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_gym", userNameParameter, userFamilyParameter, userTelParameter, userUserNameParameter, userPasswordParameter, userAgeParameter, userActiveParameter, userGenderParameter, codeMeliParameter, userAddressParameter, userHomePhoneParameter, userDoreSineParameter, userDoreBazoParameter, userDoreKamarParameter, userGhaadParameter, userSizeParameter, userTamrinParameter, userKarkardParameter, userSharieParameter, userRegTimeParameter, userFactorParameter, userPostCodeParameter, userRegDateParameter, userChargeParameter, userReChargeParameter, userLastChargeParameter, userKomodParameter, userImageParameter, userEstakhrParameter, userBimeParameter, userKhososiParameter, userBarnameQazaiyParameter);
        }
    
        public virtual int Moving(Nullable<int> programvalue, string programname)
        {
            var programvalueParameter = programvalue.HasValue ?
                new ObjectParameter("programvalue", programvalue) :
                new ObjectParameter("programvalue", typeof(int));
    
            var programnameParameter = programname != null ?
                new ObjectParameter("programname", programname) :
                new ObjectParameter("programname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Moving", programvalueParameter, programnameParameter);
        }
    
        public virtual int Sp_vegetables(string vegetablesName, Nullable<int> vegetablesCalorie, string vegetablesDesc, string memberFindID, byte[] vegetablesImage, string vegetablesVitamin, Nullable<int> finder)
        {
            var vegetablesNameParameter = vegetablesName != null ?
                new ObjectParameter("vegetablesName", vegetablesName) :
                new ObjectParameter("vegetablesName", typeof(string));
    
            var vegetablesCalorieParameter = vegetablesCalorie.HasValue ?
                new ObjectParameter("vegetablesCalorie", vegetablesCalorie) :
                new ObjectParameter("vegetablesCalorie", typeof(int));
    
            var vegetablesDescParameter = vegetablesDesc != null ?
                new ObjectParameter("vegetablesDesc", vegetablesDesc) :
                new ObjectParameter("vegetablesDesc", typeof(string));
    
            var memberFindIDParameter = memberFindID != null ?
                new ObjectParameter("MemberFindID", memberFindID) :
                new ObjectParameter("MemberFindID", typeof(string));
    
            var vegetablesImageParameter = vegetablesImage != null ?
                new ObjectParameter("vegetablesImage", vegetablesImage) :
                new ObjectParameter("vegetablesImage", typeof(byte[]));
    
            var vegetablesVitaminParameter = vegetablesVitamin != null ?
                new ObjectParameter("vegetablesVitamin", vegetablesVitamin) :
                new ObjectParameter("vegetablesVitamin", typeof(string));
    
            var finderParameter = finder.HasValue ?
                new ObjectParameter("Finder", finder) :
                new ObjectParameter("Finder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_vegetables", vegetablesNameParameter, vegetablesCalorieParameter, vegetablesDescParameter, memberFindIDParameter, vegetablesImageParameter, vegetablesVitaminParameter, finderParameter);
        }
    }
}
